(*$LIBRARY WWJ*)
(* GLOBAL VARIABLES *)
VAR_GLOBAL 
 OUT0 AT %0000 (*$COMMENT Wyjœcie diody 0*) (*$UID 1*) : BOOL;
END_VAR

VAR_GLOBAL 
 OUT1 AT %0001 (*$COMMENT Wyjœcie diody 1*) (*$UID 2*) : BOOL;
END_VAR

VAR_GLOBAL 
 OUT2 AT %0002 (*$COMMENT Wyjœcie diody 2*) (*$UID 3*) : BOOL;
END_VAR

VAR_GLOBAL 
 OUT3 AT %0003 (*$COMMENT Wyjœcie diody 3*) (*$UID 4*) : BOOL;
END_VAR

VAR_GLOBAL 
 ONOF AT %0004 (*$COMMENT Wejœcie prze³¹cznika*) : BOOL := TRUE;
END_VAR

(* USER POUs *)
PROGRAM GLOWNY
VAR
    Licznik: INT := 0;              (* Wybór aktywnego wyjœcia       *)
    sTime: TIME := t#0s;            (* Czas pocz¹tkowy cyklu         *)
    pONOF: BOOL := TRUE;
    bCOUNT : BOOL := TRUE;
END_VAR

VAR_EXTERNAL
    OUT0 : BOOL;
    OUT1 : BOOL;
    OUT2 : BOOL;
    OUT3 : BOOL;
    ONOF : BOOL;
END_VAR

IF ONOF AND NOT pONOF THEN bCOUNT := NOT bCOUNT; END_IF;
pONOF := ONOF;

IF bCOUNT THEN
IF Licznik = 0 THEN                 (* Pierwszy cykl obliczeniowy    *)
    sTime := CUR_TIME();            (* Zapamiêtaj czas systemowy     *)
    Licznik := 1;                   (* Aktywacja wyjœcia             *)
END_IF
IF CUR_TIME()-sTime >= t#500ms THEN    (* Jeœli up³yn¹³ zadany czas     *)
    sTime := CUR_TIME();            (* Czas pocz¹tkowy               *)
    IF Licznik < 8 THEN             (* Jeœli nie czwarty bit         *)
        Licznik := Licznik * 2;     (*   to ustaw nastêpny           *)
    ELSE                            (* W przeciwnym wypadku          *)
        Licznik := 1;               (*   ustaw najm³odszy bit        *)
    END_IF
END_IF
END_IF;

OUT0 := Licznik = 1;
OUT1 := Licznik = 2;
OUT2 := Licznik = 4;
OUT3 := Licznik = 8;

END_PROGRAM

(*$TASKS 
.TASK Task0001
.LOOPPARAM 0 200
GLOWNY
.END_TASK
*)
(*$END_LIBRARY*)
